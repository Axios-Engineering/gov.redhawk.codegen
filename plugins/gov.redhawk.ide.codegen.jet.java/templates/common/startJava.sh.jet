<%@ jet package="gov.redhawk.ide.codegen.jet.java.template"
imports="gov.redhawk.ide.codegen.ImplementationSettings
gov.redhawk.ide.codegen.jet.java.JavaTemplateParameter
gov.redhawk.model.sca.util.ModelUtil
mil.jpeojtrs.sca.spd.Implementation
org.eclipse.core.resources.IProject
org.eclipse.core.resources.IResource
org.eclipse.jdt.core.IClasspathEntry
mil.jpeojtrs.sca.spd.SoftPkg
org.eclipse.jdt.core.IJavaProject
org.eclipse.jdt.core.JavaCore
org.eclipse.jdt.core.JavaModelException"
class="StartJavaShTemplate"
skeleton="../generator.skeleton"
%>
<% 
    JavaTemplateParameter template = (JavaTemplateParameter) argument;
    ImplementationSettings implSettings = template.getImplSettings();
    Implementation impl = template.getImpl();
    SoftPkg softPkg = (SoftPkg) impl.eContainer();
    IResource resource = ModelUtil.getResource(implSettings);
    IProject project = resource.getProject();
    IJavaProject javaProject = JavaCore.create(project);
    String implName = gov.redhawk.ide.codegen.util.CodegenFileHelper.safeGetImplementationName(impl, implSettings);
    String jarPrefix = gov.redhawk.ide.codegen.util.CodegenFileHelper.getPreferredFilePrefix(softPkg, implSettings);
    String pkg = template.getPackage();
    String mainClass = gov.redhawk.ide.codegen.jet.java.JavaGeneratorProperties.getMainClass(impl, implSettings);
    
    String projDir = "/" + project.getName() + "/" + implSettings.getOutputDir();
    String libs = "";
    String vars = "";
    try {
        for (final IClasspathEntry path : javaProject.getRawClasspath()) {
            if (path.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {
                final String lib = path.getPath().toString();
                libs += lib.replaceAll(projDir, "\\$myDir") + ":";
            } else if (path.getEntryKind() == IClasspathEntry.CPE_VARIABLE) {
                vars += "$" + path.getPath().toString() + ":";
            }
        }
    } catch (JavaModelException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
%>#!/bin/sh
myDir=`dirname $0`

# Setup the OSSIEHOME Lib jars on the classpath
libDir=$OSSIEHOME/lib
libFiles=`ls -1 $libDir/*.jar`
for file in $libFiles
do
	if [ x"$CLASSPATH" = "x" ]
	then
		export CLASSPATH=$file
	else
		export CLASSPATH=$file:$CLASSPATH
	fi
done

# NOTE: the $@ must be quoted "$@" for arguments to be passed correctly

#Sun ORB start line
exec $JAVA_HOME/bin/java -cp <%=libs%>:<%=vars%>:$myDir/<%=jarPrefix%>.jar:$myDir/bin:$CLASSPATH <%=mainClass%> "$@"

#JacORB start lines
#$JAVA_HOME/bin/java -cp <%=libs%>:<%=vars%>:$myDir/jacorb.jar:$myDir/antlr.jar:$myDir/avalon-framework.jar:$myDir/backport-util-concurrent.jar:$myDir/logkit.jar:$myDir/<%=jarPrefix%>.jar:$myDir/bin:$CLASSPATH <%=mainClass%> "$@"
